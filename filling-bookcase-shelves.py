from functools import *
from typing import *
from library_for_lc import *
class Solution:
    @timeit
    def minHeightShelves1(self, books: List[List[int]], shelf_width: int) -> int:
        @lru_cache(None)
        def mhs(i,ch,cw,hsf):
            while i < len(books) and (ch == 0 or books[i][1] < ch) and (cw+books[i][0] <= shelf_width):
                cw += books[i][0]
                ch = max(ch,books[i][1])
                i += 1
            if i == len(books): return hsf + ch;
            o1 = float("inf")
            if cw + books[i][0] <= shelf_width:
                o1 = mhs(i+1, max(ch,books[i][1]), cw+books[i][0], hsf)
            o2 = mhs(i+1, books[i][1],books[i][0],hsf + ch) # new line
            return min(o1,o2)
                
        return mhs(0,0,0,0)
    @timeit
    def minHeightShelves(self, books: List[List[int]], shelf_width: int) -> int:
        n = len(books)
        dp = [float('inf') for _ in range(n + 1)]
        dp[0] = 0
        for i in range(1, n + 1):
            max_width = shelf_width
            max_height = 0
            j = i - 1
            while j >= 0 and max_width - books[j][0] >= 0:
                max_width -= books[j][0]
                max_height = max(max_height, books[j][1])
                dp[i] = min(dp[i], dp[j] + max_height)
                j -= 1
        return dp[n]
        
print(Solution().minHeightShelves([[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]],4))
print(Solution().minHeightShelves( [[11,83],[170,4],[93,80],[155,163],[134,118],[75,14],[122,192],[123,154],[187,29],[160,64],[170,152],[113,179],[60,102],[28,187],[59,95],[187,97],[49,193],[67,126],[75,45],[130,160],[4,102],[116,171],[43,170],[96,188],[54,15],[167,183],[58,158],[59,55],[148,183],[89,95],[90,113],[51,49],[91,28],[172,103],[173,3],[131,78],[11,199],[77,200],[58,65],[77,30],[157,58],[18,194],[101,148],[22,197],[76,181],[21,176],[50,45],[80,174],[116,198],[138,9],[58,125],[163,102],[133,175],[21,39],[141,156],[34,185],[14,113],[11,34],[35,184],[16,132],[78,147],[85,170],[32,149],[46,94],[196,3],[155,90],[9,114],[117,119],[17,157],[94,178],[53,55],[103,142],[70,121],[9,141],[16,170],[92,137],[157,30],[94,82],[144,149],[128,160],[8,147],[153,198],[12,22],[140,68],[64,172],[86,63],[66,158],[23,15],[120,99],[27,165],[79,174],[46,19],[60,98],[160,172],[128,184],[63,172],[135,54],[40,4],[102,171],[29,125],[81,9],[111,197],[16,90],[22,150],[168,126],[187,61],[47,190],[54,110],[106,102],[55,47],[117,134],[33,107],[2,10],[18,62],[109,188],[113,37],[59,159],[120,175],[17,147],[112,195],[177,53],[148,173],[29,105],[196,32],[123,51],[29,19],[161,178],[148,2],[70,124],[126,9],[105,87],[41,121],[147,10],[78,167],[91,197],[22,98],[73,33],[148,194],[166,64],[33,138],[139,158],[160,19],[140,27],[103,109],[88,16],[99,181],[2,140],[50,188],[200,77],[73,84],[159,130],[115,199],[152,79],[1,172],[124,136],[117,138],[158,86],[193,150],[56,57],[150,133],[52,186],[21,145],[127,97],[108,110],[174,44],[199,169],[139,200],[66,48],[52,190],[27,86],[142,191],[191,79],[126,114],[125,100],[176,95],[104,79],[146,189],[144,78],[52,106],[74,74],[163,128],[34,181],[20,178],[15,107],[105,8],[66,142],[39,126],[95,59],[164,69],[138,18],[110,145],[128,200],[149,150],[149,93],[145,140],[90,170],[81,127],[57,151],[167,127],[95,89]],200))
print(Solution().minHeightShelves([[195,180],[51,117],[103,81],[170,37],[149,120],[23,141],[9,44],[19,107],[70,192],[41,154],[178,104],[152,26],[16,23],[89,18],[9,153],[28,153],[68,184],[77,48],[81,140],[100,158],[150,63],[163,44],[142,194],[53,17],[93,90],[94,21],[193,48],[99,12],[40,158],[154,88],[34,106],[6,50],[14,186],[68,179],[67,13],[158,31],[182,74],[66,46],[32,109],[114,140],[64,59],[195,151],[169,177],[41,46],[81,105],[11,154],[74,85],[67,12],[185,148],[46,14],[86,42],[136,123],[14,83],[185,128],[28,46],[172,153],[172,180],[198,7],[180,98],[77,134],[80,105],[127,53],[15,34],[132,17],[102,98],[37,7],[182,78],[88,77],[154,168],[176,80],[164,61],[7,47],[114,37],[196,17],[23,139],[22,101],[130,146],[116,74],[157,44],[70,13],[135,39],[69,8],[199,195],[157,164],[151,6],[150,43],[98,121],[114,46],[110,133],[172,25],[144,156],[84,166],[122,113],[192,47],[12,131],[167,101],[120,53],[128,89],[13,26],[75,147],[185,54],[101,70],[189,192],[33,28],[42,20],[152,72],[81,54],[104,101],[42,14],[69,55],[80,178],[84,70],[53,56],[144,2],[146,132],[141,151],[99,110],[136,62],[191,82],[112,129],[74,100],[148,109],[75,51],[26,190],[26,50],[14,175],[128,88],[5,192],[38,89],[132,124],[123,161],[144,155],[198,48],[173,140],[110,62],[125,80],[155,127],[181,136],[148,101],[146,1],[90,149],[193,19],[140,91],[108,159],[101,116],[24,111],[62,151],[132,37],[156,142],[65,119],[183,79],[114,77],[55,166],[172,32],[64,111],[90,150],[140,186],[168,21],[66,91],[179,45],[16,124],[99,64],[170,4],[30,17],[53,18],[115,148],[71,169],[103,57],[126,111],[108,44],[140,168],[130,97],[146,186],[10,175],[12,20],[142,141],[137,156],[39,47],[3,7],[122,134],[10,67],[121,123],[33,95],[158,49],[14,161],[122,115],[11,65],[133,68],[197,166],[80,106],[48,27],[94,36],[87,36],[172,7],[39,6],[147,150],[87,40],[3,99],[17,140],[113,85],[62,196],[189,11],[124,178],[153,102],[191,54],[1,66],[43,61],[131,58],[46,152],[74,61],[64,64],[68,63],[105,199],[187,25],[34,15],[66,187],[135,52],[68,112],[122,191],[66,162],[172,196],[185,38],[4,115],[139,166],[82,200],[130,99],[13,162],[140,45],[91,131],[93,11],[60,177],[177,200],[102,148],[57,130],[62,16],[195,135],[131,185],[71,12],[2,105],[161,137],[198,169],[124,114],[107,29],[195,59],[3,20],[162,86],[60,104],[14,14],[116,179],[109,56],[125,169],[26,179],[180,10],[29,2],[152,36],[84,183],[61,28],[45,146],[194,51],[129,119],[75,71],[135,28],[79,85],[132,170],[150,15],[158,76],[88,122],[165,27],[45,198],[78,152],[188,162],[99,91],[173,104],[101,199],[123,172],[102,178],[131,153],[45,1],[15,194],[61,38],[110,39],[140,195],[171,153],[135,55],[19,10],[177,6],[25,103],[93,175],[200,73],[190,124],[8,108],[61,139],[2,46],[145,177],[3,25],[31,114],[69,30],[148,130],[118,18],[187,175],[10,108],[67,180],[52,65],[82,99],[42,38]],200))
