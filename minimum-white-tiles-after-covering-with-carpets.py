from functools import *
import sys
class Solution:
    def minimumWhiteTiles(self, f, nc, cl):
        @lru_cache(None)
        def dfs(i, r):
            #print (i)
            if i >= len(f): return 0
            
            if r <=0: return sum(map(lambda x: int(x), f[i:]))
            
            return min(dfs(i+1, r) + int(f[i]), dfs(i+cl,r-1))
            
        sys.setrecursionlimit(10000)
        print(' length ', len(f))
        return dfs(0, nc)

print(Solution().minimumWhiteTiles
